---Task A-------
The least-squares signal smoothing is implemented using Gram-Schmidt QR-decomposition to solve the linear equation A*y_smooth=y_raw. 

Example of matrix D: The second derivative of a discrete signal is approximated by its secondorder difference, Dx,
where the matrix D (e.g. for a set of 5 datapoints) is given as:
D = 
         1         -2          1          0          0          0          0 
         1         -2          1          0          0          0          0 
         0          1         -2          1          0          0          0 
         0          0          1         -2          1          0          0 
         0          0          0          1         -2          1          0 
         0          0          0          0          1         -2          1 
         0          0          0          0          1         -2          1 

Example of matrix A for smoothing parameter lambda = 1 and 5 data points:
A = 1+Î»D^TD =  
         3         -4          2          0          0          0          0 
        -4         10         -6          1          0          0          0 
         2         -6          8         -4          1          0          0 
         0          1         -4          7         -4          1          0 
         0          0          1         -4          8         -6          2 
         0          0          0          1         -6         10         -4 
         0          0          0          0          2         -4          3 

See 'Out.smoothQR.svg':
        The figure shows a noisy signal (generated by chatGPT) and the smoothened signal 
        (using QR-decomposition) with 3 different smoothing parameters lambda.

---Task B-------
See 'Out.smoothQR_generated.svg':
        Signal with random noise is generated. And the smoothing with QR-decomposition is applied.

---Task C.1-------
The linear equation A*y_smooth=y_raw is solved by LU factorization (here I still work with matrices which contain lots of zeros). For the example A from above:
L = 
         1          0          0          0          0          0          0 
     -1.33          1          0          0          0          0          0 
     0.667     -0.714          1          0          0          0          0 
         0      0.214     -0.767          1          0          0          0 
         0          0      0.233     -0.758          1          0          0 
         0          0          0      0.234     -0.986          1          0 
         0          0          0          0      0.376     -0.441          1 
U = 
         3         -4          2          0          0          0          0 
         0       4.67      -3.33          1          0          0          0 
         0          0       4.29      -3.29          1          0          0 
         0          0          0       4.27      -3.23          1          0 
         0          0          0          0       5.32      -5.24          2 
         0          0          0          0          0        4.6      -2.03 
         0          0          0          0          0          0       1.35 
Test: LU = 
         3         -4          2          0          0          0          0 
        -4         10         -6          1          0          0          0 
         2         -6          8         -4          1          0          0 
         0          1         -4          7         -4          1          0 
         0          0          1         -4          8         -6          2 
         0          0          0          1         -6         10         -4 
         0          0          0          0          2         -4          3 
LU=A? => True
---Task C.2-------
The matrix A in this linear equation is pentadiagonal banded (has only 5 non-zero diagonals)
therefore in order to make the method efficient, instead of QR-decopmposition, we use this fact in LU decomposition.
